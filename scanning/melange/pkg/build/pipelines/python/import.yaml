name: Test a python package import, with optional from clause

needs:
  packages:
    - wolfi-base

inputs:
  python:
    description: Which python to use
    default: DEFAULT
  import:
    description: |
      The package to import. Deprecated, use 'imports' instead.
    required: false
  from:
    description: |
      The package to import from (used with 'from <from> import <import>'). Deprecated, use 'imports' instead.
    required: false
  imports:
    description: |
      Commands to import packages, each line is a separate command. Example:
        from libfoo import bar
        # test that otherthing can be imported from asdf
        from asdf import otherthing
        import bark # this is like woof

      full-line and inline comments are supported via '#'
    required: false

pipeline:
  - runs: |
      set +x
      PYTHON="${{inputs.python}}"
      SINGLE_IMPORT="${{inputs.import}}"
      MULTIPLE_IMPORTS="${{inputs.imports}}"
      FROM_PKG="${{inputs.from}}"

      perform_import() {
        command="$1"
        if $PYTHON -c "$command"; then
          echo "$PYTHON -c \"$command\": PASS"
        else
          echo "$PYTHON -c \"$command\": FAIL"
          return 1
        fi
      }

      if [ "$PYTHON" = "DEFAULT" ]; then
          glob="/usr/bin/python3.[0-9][0-9] /usr/bin/python3.[789]"
          n=0
          for p in $glob; do
            [ -x "$p" ] && n=$((n+1)) && py=$p
          done
          if [ "$n" -ne 1 ]; then
            echo "FAIL: must set inputs.python: " \
               "found $n executables matching $glob"
            [ "$n" -eq 0 ] || echo "found:" $glob
            exit 1
          fi
          echo "using python $py"
          PYTHON=$py
      fi

      if [ -n "$SINGLE_IMPORT" ] && [ -n "$MULTIPLE_IMPORTS" ]; then
        echo "Error: Cannot mix 'import' with 'imports'."
        exit 1
      fi
      if [ -n "$FROM_PKG" ] && [ -n "$MULTIPLE_IMPORTS" ]; then
        echo "Error: Cannot use 'from' with 'imports'."
        exit 1
      fi

      fail_flag=0
      if [ -n "$MULTIPLE_IMPORTS" ]; then
        importf=$(mktemp) || { echo "failed mktemp"; exit 1; }
        printf "%s\n" "$MULTIPLE_IMPORTS" > "$importf" ||
            { echo "failed to write to temp file"; exit 1; }

        while read line; do
          # Drop anything after #
          line=${line%%#*}
          cmd=$(set -f; echo $line) # normalize/trim whitespace
          [ -z "$cmd" ] && continue
          perform_import "$cmd" || fail_flag=1
        done < "$importf"
        rm -f "$importf"
      elif [ -n "$FROM_PKG" ]; then
        if [ -z "$SINGLE_IMPORT" ]; then
          echo "Error: 'from' specified without 'import'."
          exit 1
        fi
        command="from $FROM_PKG import $SINGLE_IMPORT"
        perform_import "$command" || fail_flag=1
      elif [ -n "$SINGLE_IMPORT" ]; then
        perform_import "import $SINGLE_IMPORT" || fail_flag=1
      else
        echo "No package specified for import."
        fail_flag=1
      fi

      exit $fail_flag
